meta:
  library: pandas
  alias_regex: "^(pd|pandas)$"

rules:
  - func: join
    mutation: "row-set merge"
    default_severity: MEDIUM
    notes: |
      Can silently drop rows when how='inner'. Consider using merge() with 
      validate parameter for better control.

  - func: merge
    mutation: "row-set merge"
    default_severity: MEDIUM
    notes: |
      Can silently drop or duplicate rows depending on join type and key uniqueness.
      Use validate parameter to catch unexpected behavior.

  - func: drop
    mutation: "row/col drop"
    default_severity: HIGH
    notes: |
      Permanently removes data from DataFrame. Use with caution in production.
    extra_checks:
      arg_present:
        name: inplace
        value: true
        set_severity: CRITICAL

  - func: drop_duplicates
    mutation: "row deduplication"
    default_severity: MEDIUM
    notes: |
      Removes duplicate rows which may be legitimate data in some contexts.
    extra_checks:
      arg_present:
        name: inplace
        value: true
        set_severity: HIGH

  - func: dropna
    mutation: "null value removal"
    default_severity: MEDIUM
    notes: |
      Removes rows/columns with missing values. May significantly reduce dataset size.
    extra_checks:
      arg_present:
        name: inplace
        value: true
        set_severity: HIGH

  - func: fillna
    mutation: "null value imputation"
    default_severity: LOW
    notes: |
      Replaces missing values with specified values. Can introduce bias if not done carefully.
    extra_checks:
      arg_present:
        name: inplace
        value: true
        set_severity: MEDIUM

  - func: replace
    mutation: "value replacement"
    default_severity: MEDIUM
    notes: |
      Replaces specified values throughout the DataFrame. Can have wide-reaching effects.
    extra_checks:
      arg_present:
        name: inplace
        value: true
        set_severity: HIGH

  - func: sort_values
    mutation: "row reordering"
    default_severity: LOW
    notes: |
      Changes the order of rows in the DataFrame.
    extra_checks:
      arg_present:
        name: inplace
        value: true
        set_severity: MEDIUM

  - func: reset_index
    mutation: "index modification"
    default_severity: LOW
    notes: |
      Resets the DataFrame index, potentially losing index information.
    extra_checks:
      arg_present:
        name: inplace
        value: true
        set_severity: MEDIUM

  - func: set_index
    mutation: "index modification"
    default_severity: LOW
    notes: |
      Changes the DataFrame index, affecting row identification.
    extra_checks:
      arg_present:
        name: inplace
        value: true
        set_severity: MEDIUM

  - func: concat
    mutation: "data concatenation"
    default_severity: MEDIUM
    notes: |
      Combines multiple DataFrames. Can introduce duplicate indices or misaligned data.

  - func: append
    mutation: "row addition"
    default_severity: MEDIUM
    notes: |
      Adds rows to DataFrame. Deprecated in favor of concat().
    extra_checks:
      arg_present:
        name: ignore_index
        value: false
        set_severity: HIGH

  - func: assign
    mutation: "column assignment"
    default_severity: LOW
    notes: |
      Adds or modifies columns in the DataFrame.

  - func: insert
    mutation: "column insertion"
    default_severity: LOW
    notes: |
      Inserts a new column at a specific position.

  - func: pop
    mutation: "column removal"
    default_severity: MEDIUM
    notes: |
      Removes and returns a column from the DataFrame.

  - func: sample
    mutation: "data sampling"
    default_severity: MEDIUM
    notes: |
      Returns a random sample of rows. Results are non-deterministic unless random_state is set.

  - func: groupby
    mutation: "data aggregation"
    default_severity: LOW
    notes: |
      Groups data for aggregation. The aggregation functions applied may mutate understanding of the data.

  - func: pivot
    mutation: "data reshaping"
    default_severity: MEDIUM
    notes: |
      Reshapes data from long to wide format. Can create sparse matrices with many NaN values.

  - func: pivot_table
    mutation: "data aggregation/reshaping"
    default_severity: MEDIUM
    notes: |
      Creates a pivot table with aggregation. May lose granular data through aggregation.

  - func: melt
    mutation: "data reshaping"
    default_severity: MEDIUM
    notes: |
      Reshapes data from wide to long format. Changes the fundamental structure of the data.

  - func: transpose
    mutation: "data transposition"
    default_severity: MEDIUM
    notes: |
      Transposes the DataFrame, swapping rows and columns.

  - func: reindex
    mutation: "index/column reordering"
    default_severity: MEDIUM
    notes: |
      Reorders or adds/removes indices. Can introduce NaN values for missing indices.

  - func: rename
    mutation: "label modification"
    default_severity: LOW
    notes: |
      Renames columns or index labels.
    extra_checks:
      arg_present:
        name: inplace
        value: true
        set_severity: MEDIUM

  - func: notnull
    mutation: "null value filtering"
    default_severity: LOW
    notes: |
      Returns boolean mask for non-null values. Often used for filtering which can reduce dataset size.

  - func: isnull
    mutation: "null value filtering"  
    default_severity: LOW
    notes: |
      Returns boolean mask for null values. Often used for filtering which can reduce dataset size.

  - func: notna
    mutation: "null value filtering"
    default_severity: LOW
    notes: |
      Returns boolean mask for non-null values. Often used for filtering which can reduce dataset size.

  - func: isna
    mutation: "null value filtering"
    default_severity: LOW
    notes: |
      Returns boolean mask for null values. Often used for filtering which can reduce dataset size.

  - func: astype
    mutation: "data type conversion"
    default_severity: MEDIUM
    notes: |
      Converts data types which can cause data loss (e.g., float to int truncation) or change data interpretation.

  - func: sum
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by summing values. Reduces granularity and loses individual data points.

  - func: mean
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by calculating mean. Reduces granularity and loses individual data points.

  - func: median
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by calculating median. Reduces granularity and loses individual data points.

  - func: std
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by calculating standard deviation. Reduces granularity and loses individual data points.

  - func: var
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by calculating variance. Reduces granularity and loses individual data points.

  - func: min
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by finding minimum value. Reduces granularity and loses individual data points.

  - func: max
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by finding maximum value. Reduces granularity and loses individual data points.

  - func: count
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by counting non-null values. Reduces granularity and loses individual data points.

  - func: size
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by counting all values. Reduces granularity and loses individual data points.

  - func: nunique
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by counting unique values. Reduces granularity and loses individual data points.

  - func: first
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by taking first value. Reduces granularity and loses other data points.

  - func: last
    mutation: "data aggregation"
    default_severity: MEDIUM
    notes: |
      Aggregates data by taking last value. Reduces granularity and loses other data points.

  - func: head
    mutation: "data sampling"
    default_severity: MEDIUM
    notes: |
      Returns first n rows, potentially excluding significant portions of the dataset.

  - func: tail
    mutation: "data sampling"
    default_severity: MEDIUM
    notes: |
      Returns last n rows, potentially excluding significant portions of the dataset.

  - func: apply
    mutation: "data transformation"
    default_severity: MEDIUM
    notes: |
      Applies function to data which can transform values in unpredictable ways depending on the function.

  - func: map
    mutation: "data transformation"
    default_severity: MEDIUM
    notes: |
      Maps values using a dictionary, Series, or function which can transform the data.

  - func: transform
    mutation: "data transformation"
    default_severity: MEDIUM
    notes: |
      Applies function to transform data while preserving shape, but values may change significantly.

  - func: iloc
    mutation: "row/column selection"
    default_severity: MEDIUM
    notes: |
      Selects specific rows/columns by integer position. Can reduce dataset size by excluding data.

  - func: loc
    mutation: "row/column selection"
    default_severity: MEDIUM
    notes: |
      Selects specific rows/columns by labels. Can reduce dataset size by excluding data.

  - func: isin
    mutation: "value membership filtering"
    default_severity: LOW
    notes: |
      Returns boolean mask for values in specified list. Often used for filtering which can reduce dataset size.

  - func: where
    mutation: "conditional data selection"
    default_severity: MEDIUM
    notes: |
      Replaces values that don't meet condition with NaN or specified value.

  - func: mask
    mutation: "conditional data masking"
    default_severity: MEDIUM
    notes: |
      Replaces values that meet condition with NaN or specified value.

  - func: query
    mutation: "data filtering"
    default_severity: MEDIUM
    notes: |
      Filters DataFrame using query expression. Can significantly reduce dataset size.

  - func: eval
    mutation: "expression evaluation"
    default_severity: MEDIUM
    notes: |
      Evaluates string expressions which can modify data in unpredictable ways.

  - func: clip
    mutation: "value clipping"
    default_severity: MEDIUM
    notes: |
      Clips values to specified bounds, potentially changing extreme values.

  - func: round
    mutation: "value rounding"
    default_severity: LOW
    notes: |
      Rounds values to specified decimal places, potentially losing precision.

  - func: abs
    mutation: "absolute value conversion"
    default_severity: LOW
    notes: |
      Converts all values to their absolute values, losing sign information.

  - func: copy
    mutation: "data duplication"
    default_severity: LOW
    notes: |
      Creates a copy of the DataFrame. While not mutating original, indicates data manipulation workflow. 