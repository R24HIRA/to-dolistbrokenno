{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "datamut",
          "version": "0.1.0",
          "informationUri": "https://github.com/datamut/datamut",
          "rules": [
            {
              "id": "drop.row/col_drop",
              "name": "pandas.drop",
              "shortDescription": {
                "text": "row/col drop"
              },
              "fullDescription": {
                "text": "Permanently removes data from DataFrame. Use with caution in production.\n"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "properties": {
                "category": "data-mutation",
                "library": "pandas"
              }
            },
            {
              "id": "dropna.null_value_removal",
              "name": "pandas.dropna",
              "shortDescription": {
                "text": "null value removal"
              },
              "fullDescription": {
                "text": "Removes rows/columns with missing values. May significantly reduce dataset size.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "category": "data-mutation",
                "library": "pandas"
              }
            },
            {
              "id": "drop_duplicates.row_deduplication",
              "name": "pandas.drop_duplicates",
              "shortDescription": {
                "text": "row deduplication"
              },
              "fullDescription": {
                "text": "Removes duplicate rows which may be legitimate data in some contexts.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "category": "data-mutation",
                "library": "pandas"
              }
            },
            {
              "id": "fillna.null_value_imputation",
              "name": "pandas.fillna",
              "shortDescription": {
                "text": "null value imputation"
              },
              "fullDescription": {
                "text": "Replaces missing values with specified values. Can introduce bias if not done carefully.\n"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "properties": {
                "category": "data-mutation",
                "library": "pandas"
              }
            },
            {
              "id": "concat.data_concatenation",
              "name": "pandas.concat",
              "shortDescription": {
                "text": "data concatenation"
              },
              "fullDescription": {
                "text": "Combines multiple DataFrames. Can introduce duplicate indices or misaligned data.\n"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "category": "data-mutation",
                "library": "pandas"
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop('A', axis=1)  # HIGH severity"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop('B', axis=1, inplace=True)  # CRITICAL severity (inplace=True)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "CRITICAL",
            "extraContext": {
              "matched_arg": {
                "name": "inplace",
                "value": true
              }
            }
          }
        },
        {
          "ruleId": "dropna.null_value_removal",
          "message": {
            "text": "null value removal: dropna",
            "markdown": "**null value removal**: `dropna`\n\nRemoves rows/columns with missing values. May significantly reduce dataset size.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.dropna()  # MEDIUM severity"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "null value removal",
            "severity": "MEDIUM",
            "extraContext": {}
          }
        },
        {
          "ruleId": "dropna.null_value_removal",
          "message": {
            "text": "null value removal: dropna",
            "markdown": "**null value removal**: `dropna`\n\nRemoves rows/columns with missing values. May significantly reduce dataset size.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.dropna(inplace=True)  # HIGH severity (inplace=True)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "null value removal",
            "severity": "HIGH",
            "extraContext": {
              "matched_arg": {
                "name": "inplace",
                "value": true
              }
            }
          }
        },
        {
          "ruleId": "drop_duplicates.row_deduplication",
          "message": {
            "text": "row deduplication: drop_duplicates",
            "markdown": "**row deduplication**: `drop_duplicates`\n\nRemoves duplicate rows which may be legitimate data in some contexts.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop_duplicates()  # LOW severity"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row deduplication",
            "severity": "MEDIUM",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop_duplicates.row_deduplication",
          "message": {
            "text": "row deduplication: drop_duplicates",
            "markdown": "**row deduplication**: `drop_duplicates`\n\nRemoves duplicate rows which may be legitimate data in some contexts.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop_duplicates(inplace=True)  # MEDIUM severity (inplace=True)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row deduplication",
            "severity": "HIGH",
            "extraContext": {
              "matched_arg": {
                "name": "inplace",
                "value": true
              }
            }
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 10,
                  "snippet": {
                    "text": "result = df.drop('A', axis=1).dropna().drop_duplicates()"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop('B', axis=1).fillna(0).drop_duplicates(inplace=True)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 17,
                  "snippet": {
                    "text": "processed_df = (df"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop(columns_to_drop, axis=1)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop(df.columns[0], axis=1)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop(df.columns[:2], axis=1)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 5,
                  "snippet": {
                    "text": "df.drop('A', axis=1, inplace=True)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "CRITICAL",
            "extraContext": {
              "matched_arg": {
                "name": "inplace",
                "value": true
              }
            }
          }
        },
        {
          "ruleId": "dropna.null_value_removal",
          "message": {
            "text": "null value removal: dropna",
            "markdown": "**null value removal**: `dropna`\n\nRemoves rows/columns with missing values. May significantly reduce dataset size.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 5,
                  "snippet": {
                    "text": "df.dropna(inplace=True)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "null value removal",
            "severity": "HIGH",
            "extraContext": {
              "matched_arg": {
                "name": "inplace",
                "value": true
              }
            }
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 5,
                  "snippet": {
                    "text": "df.drop(col, axis=1, inplace=True)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "CRITICAL",
            "extraContext": {
              "matched_arg": {
                "name": "inplace",
                "value": true
              }
            }
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop(index=[0, 1])  # Drop by index"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop(columns=['A'])  # Drop by columns parameter"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "dropna.null_value_removal",
          "message": {
            "text": "null value removal: dropna",
            "markdown": "**null value removal**: `dropna`\n\nRemoves rows/columns with missing values. May significantly reduce dataset size.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.dropna(subset=['A', 'B'])  # Drop with subset"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "null value removal",
            "severity": "MEDIUM",
            "extraContext": {}
          }
        },
        {
          "ruleId": "dropna.null_value_removal",
          "message": {
            "text": "null value removal: dropna",
            "markdown": "**null value removal**: `dropna`\n\nRemoves rows/columns with missing values. May significantly reduce dataset size.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.dropna(how='all')  # Drop with how parameter"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "null value removal",
            "severity": "MEDIUM",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop_duplicates.row_deduplication",
          "message": {
            "text": "row deduplication: drop_duplicates",
            "markdown": "**row deduplication**: `drop_duplicates`\n\nRemoves duplicate rows which may be legitimate data in some contexts.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.drop_duplicates(subset=['A'])  # Drop duplicates with subset"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row deduplication",
            "severity": "MEDIUM",
            "extraContext": {}
          }
        },
        {
          "ruleId": "fillna.null_value_imputation",
          "message": {
            "text": "null value imputation: fillna",
            "markdown": "**null value imputation**: `fillna`\n\nReplaces missing values with specified values. Can introduce bias if not done carefully.\n"
          },
          "level": "note",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.fillna({'A': 0, 'B': 1})  # Fill with dictionary"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "null value imputation",
            "severity": "LOW",
            "extraContext": {}
          }
        },
        {
          "ruleId": "fillna.null_value_imputation",
          "message": {
            "text": "null value imputation: fillna",
            "markdown": "**null value imputation**: `fillna`\n\nReplaces missing values with specified values. Can introduce bias if not done carefully.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df.fillna(method='bfill', inplace=True)  # Fill with method and inplace"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "null value imputation",
            "severity": "MEDIUM",
            "extraContext": {
              "matched_arg": {
                "name": "inplace",
                "value": true
              }
            }
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 10,
                  "snippet": {
                    "text": "result = df.drop('A', axis=1).dropna().reset_index(drop=True)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 10,
                  "snippet": {
                    "text": "new_df = df.drop('A', axis=1)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "dropna.null_value_removal",
          "message": {
            "text": "null value removal: dropna",
            "markdown": "**null value removal**: `dropna`\n\nRemoves rows/columns with missing values. May significantly reduce dataset size.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 15,
                  "snippet": {
                    "text": "modified_df = df.dropna().drop_duplicates()"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "null value removal",
            "severity": "MEDIUM",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 1,
                  "snippet": {
                    "text": "df2.drop('X', axis=1, inplace=True)"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "CRITICAL",
            "extraContext": {
              "matched_arg": {
                "name": "inplace",
                "value": true
              }
            }
          }
        },
        {
          "ruleId": "concat.data_concatenation",
          "message": {
            "text": "data concatenation: concat",
            "markdown": "**data concatenation**: `concat`\n\nCombines multiple DataFrames. Can introduce duplicate indices or misaligned data.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 12,
                  "snippet": {
                    "text": "combined = pd.concat([df.drop('A', axis=1), df2.dropna()])"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "data concatenation",
            "severity": "MEDIUM",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 23,
                  "snippet": {
                    "text": "combined = pd.concat([df.drop('A', axis=1), df2.dropna()])"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "dropna.null_value_removal",
          "message": {
            "text": "null value removal: dropna",
            "markdown": "**null value removal**: `dropna`\n\nRemoves rows/columns with missing values. May significantly reduce dataset size.\n"
          },
          "level": "warning",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 45,
                  "snippet": {
                    "text": "combined = pd.concat([df.drop('A', axis=1), df2.dropna()])"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "null value removal",
            "severity": "MEDIUM",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 5,
                  "snippet": {
                    "text": "df.drop([], axis=1)  # Empty list"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        },
        {
          "ruleId": "drop.row/col_drop",
          "message": {
            "text": "row/col drop: drop",
            "markdown": "**row/col drop**: `drop`\n\nPermanently removes data from DataFrame. Use with caution in production.\n"
          },
          "level": "error",
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "/Users/r.hira/Projects/auditr/testF/test_pandas_comprehensive.py"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 5,
                  "snippet": {
                    "text": "df.drop('NonExistent', axis=1, errors='ignore')  # Non-existent column"
                  }
                }
              }
            }
          ],
          "properties": {
            "library": "pandas",
            "mutationType": "row/col drop",
            "severity": "HIGH",
            "extraContext": {}
          }
        }
      ],
      "invocations": [
        {
          "executionSuccessful": true,
          "endTimeUtc": "2025-06-02T13:26:26.459521Z"
        }
      ]
    }
  ]
}